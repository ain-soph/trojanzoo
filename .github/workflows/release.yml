name: release

on:
  release:
    types: [created]

env:
  DOCKERHUB_REPOSITORY: trojanzoo
jobs:
  pypi:
    runs-on: ubuntu-latest
    container:
      image: local0state/base:cpu
    environment:
      name: pypi
      url: https://pypi.org/p/trojanzoo
    permissions:
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Dependencies
        run: pip install --upgrade --no-cache-dir setuptools build
      - name: Build
        run: python -m build
      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        # with:
        #   user: __token__
        #   password: ${{ secrets.PYPI_API_TOKEN }}
  cpu:
    name: docker-cpu
    needs: pypi
    runs-on: ubuntu-latest
    steps:
      - name: version
        id: get-version
        uses: actions/github-script@v6
        with:
          script: return context.payload.release.tag_name.substring(1)
          result-encoding: string
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.5.0
      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./
          file: ./docker/${{ github.job }}.dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:${{ steps.get-version.outputs.result }}-${{ github.job }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:${{ github.job }}
            ghcr.io/${{ github.repository }}:${{ steps.get-version.outputs.result }}-${{ github.job }}
            ghcr.io/${{ github.repository }}:${{ github.job }}
          cache-from: type=gha
          cache-to: type=gha
  gpu:
    name: docker-gpu
    needs: pypi
    runs-on: ubuntu-latest
    steps:
      - name: version
        id: get-version
        uses: actions/github-script@v6
        with:
          script: return context.payload.release.tag_name.substring(1)
          result-encoding: string
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.5.0
      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./
          file: ./docker/${{ github.job }}.dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:${{ steps.get-version.outputs.result }}-${{ github.job }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:${{ steps.get-version.outputs.result }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:${{ github.job }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:latest
          # ghcr.io/${{ github.repository }}:${{ steps.get-version.outputs.result }}-${{ github.job }}
          # ghcr.io/${{ github.repository }}:${{ steps.get-version.outputs.result }}
          # ghcr.io/${{ github.repository }}:${{ github.job }}
          # ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha
